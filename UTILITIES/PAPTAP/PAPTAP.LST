ASM68 6800 Assembler (c) 1988-1995 Evenson Consulting Services        Page 1
FILE: c:\src\repos\zoggins\mc6800\utilities\paptap\paptap.asm

00011         9000           ORG     $9000            
00013         801E PIABDR    EQU     $801E            PIA IN SLOT 7, DATA REGIST
00014         801F PIABCR    EQU     $801F            PIA IN SLOT 7, CONTROL REG
00015         E1D1 OUTCH     EQU     $E1D1            
00016               
00017 9000 8D 2F   ENTER     BSR     PIASUP           INIT PIA
00018 9002 8D 3C   START     BSR     PIADAT           GET 1ST BYTE
00019 9004 81 53             CMP A   #'S              IS IT AN S?
00020 9006 26 FA             BNE     START            IF NOT, START OVER
00021 9008 8D 36             BSR     PIADAT           GET 2ND BYTE
00022 900A 81 31             CMP A   #$31             IS IT A 1?
00023 900C 26 F4             BNE     START            IF NOT, START OVER
00024 900E 7F 908A           CLR     CHKSUM           
00025 9011 8D 47             BSR     GETBYTE          GET THE BYTE COUNT
00026 9013 80 02             SUB A   #2               
00027 9015 B7 9087           STA A   NUMBYT           
00028 9018 8D 54             BSR     GETADDR          GET ADDRESS AND LOAD X
00029               
00030 901A 8D 3E   LOOP      BSR     GETBYTE          READ THE BYTES
00031 901C 7A 9087           DEC     NUMBYT           
00032 901F 27 05             BEQ     CHKCHK           LAST BYTE IS CHECKSUM
00033 9021 A7 00             STA A   0,X              
00034 9023 08                INX                      
00035 9024 20 F4             BRA     LOOP             
00036               
00037 9026 7C 908A CHKCHK    INC     CHKSUM           CHECK THE CHECKSUM      
00038 9029 27 D7             BEQ     START            GO TO NEXT LINE
00039 902B 86 21             LDA A   #'!              
00040 902D BD E1D1           JSR     OUTCH            
00041 9030 3F                SWI                      FAILED CHECK SUM, SO INTER
00042               
00043               *********** PIASUP - PIA SETUP ROUTINE
00044 9031 86 32   PIASUP    LDA A   #$32             C1 SET ON RISING EDGE OF R
00045 9033 B7 801F           STA A   PIABCR           SET CRB
00046 9036 4F                CLR A                    
00047 9037 B7 801E           STA A   PIABDR           SET DDRB = ALL INPUTS
00048 903A 86 3E             LDA A   #$3E             RAISE ACK ON C2 (RESET RDY
00049 903C B7 801F           STA A   PIABCR           SET CRB
00050 903F 39                RTS                      AND LEAVE...
00051               
00052               *********** PIADAT - GET DATA FROM PIA
00053 9040 86 36   PIADAT    LDA A   #$36             C1 SET ON RISING EDGE OF R
00054 9042 B7 801F           STA A   PIABCR           SET CRB
00055 9045 B6 801F DATLOP    LDA A   PIABCR           GET RDY ON C1 
00056 9048 2B 02             BMI     GETDAT           DATA PRESENT? (BIT 7 == 1)
00057 904A 20 F9             BRA     DATLOP           NOT YET. KEEP TRYING.
00058 904C B6 801E GETDAT    LDA A   PIABDR           YES. GET THE DATA,
00059 904F BD E1D1           JSR     OUTCH            PRINT IT OUT
00060 9052 36                PSH A                    AND SAVE IT.
00061 9053 86 3E             LDA A   #$3E             RAISE ACK ON C2 (RESET RDY
00062 9055 B7 801F           STA A   PIABCR           
00063 9058 32                PUL A                    PUT DATA BACK IN REGISTER
00064 9059 39                RTS                      AND LEAVE...
00065               
00066               *********** GETBYTE - READ ASCII HEX BYTE (2 digits)
00067 905A 8D 20   GETBYTE   BSR     A2H              GET FIRST CHARACTER TO HEX
00068 905C 48                ASL A                    MOVE IT UP 4 BITS
00069 905D 48                ASL A                    
ASM68 6800 Assembler (c) 1988-1995 Evenson Consulting Services        Page 2
FILE: c:\src\repos\zoggins\mc6800\utilities\paptap\paptap.asm

00070 905E 48                ASL A                    
00071 905F 48                ASL A                    
00072 9060 16                TAB                      
00073 9061 8D 19             BSR     A2H              GET SECOND CHARACTER TO HE
00074 9063 1B                ABA                      ADD THEM TOGETHER
00075 9064 36                PSH A                    
00076 9065 16                TAB                      
00077 9066 FB 908A           ADD B   CHKSUM           ADD TO CHECKSUM
00078 9069 F7 908A           STA B   CHKSUM           
00079 906C 32                PUL A                    
00080 906D 39                RTS                      
00081               
00082               *********** GETADDR - READ ADDRESS AND LOAD X
00083 906E 8D EA   GETADDR   BSR     GETBYTE          
00084 9070 B7 9088           STA A   TMPADDR1         
00085 9073 8D E5             BSR     GETBYTE          
00086 9075 B7 9089           STA A   TMPADDR2         
00087 9078 FE 9088           LDX     TMPADDR1         
00088 907B 39                RTS                      
00089               
00090               *********** A2H - READ SINGLE ASCII BYTE AND CONVERT TO HEX
00091 907C 8D C2   A2H       BSR     PIADAT           
00092 907E 80 30             SUB A   #$30             
00093 9080 81 09             CMP A   #09              
00094 9082 2F 02             BLE     RT               
00095 9084 80 07             SUB A   #7               
00096 9086 39      RT        RTS                      
00097               
00098 9087         NUMBYT    RMB     1                BYTES LEFT TO READ
00099 9088         TMPADDR1  RMB     1                TEMP ADDRESS POINTER
00100 9089         TMPADDR2  RMB     1                
00101 908A         CHKSUM    RMB     1                RUNNING CHECKSUM
00102               
00103         0000           END                      

No errors

 Total bytes output = 139

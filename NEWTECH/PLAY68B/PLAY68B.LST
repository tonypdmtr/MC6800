ASM68 6800 Assembler (c) 1988-1995 Evenson Consulting Services        Page 1
FILE: c:\src\repos\zoggins\mc6800\play68b\play68b.asm      TITLE: PLAY68

00001                        NAM     PLAY68           REV.B MAY 1978
00002                        OPT     O,NOP            
00003               * COPYRIGHT (C) 1978 ALL RIGHTS RESERVED.
00004               * NEWTECH COMPUTER SYSTEMS,INC.
00005               *
00006               * PLAY68 STARTS AT THE BEGINNING OF THE MEMORY AREA
00007               * DESIGNATED "SCORE" AND TRANSFERS INTO RAM LOCATION
00008               * "PITCH" A 1-BYTE PITCH PARAMETER AND INTO RAM
00009               * LOCATION "DURA" A 2-BYTE DURATION PARAMETER.
00010               * THE ROUTINE THEN OUTPUTS TO
00011               * THE MODEL 68 THE MUSICAL NOTE SPECIFIED BY THESE
00012               * NOTE PARAMETERS.  PLAY68 CONTINUES TRANSFERRING
00013               * NOTE PARAMETERS AND OUTPUTING EACH NOTE UNTIL
00014               * A PITCH CONSTANT OF ZERO IS ENCOUNTERED WHICH
00015               * INDICATES THE END OF THE MUSICAL SCORE.
00016               * THIS ROUTINE DOES NOT USE THE STACK.
00017               *
00018         1EE2 BASEND    EQU     $1EE2            ;END OF SWTPC 8K BASIC 2.2
00019         1F02           ORG     BASEND+$20       
00020         2002 SCORE     EQU     BASEND+$0120     ;SCORE LOCATION
00021 1F02 CE 2002           LDX     #SCORE           ;INIT. SCORE POINTER.
00022 1F05 FF 1FF8           STX     PLACE            
00023 1F08 20 03             BRA     NEXT             
00024 1F0A 39      EXIT1     RTS                      
00025 1F0B 01                NOP                      
00026 1F0C 01                NOP                      
00027 1F0D FE 1FF8 NEXT      LDX     PLACE            
00028 1F10 86 00             LDAA    #0               
00029 1F12 A1 00             CMPA    0,X              
00030 1F14 27 F4   HERE      BEQ     EXIT1            ;YOUR ENDING?
00031               *   ELSE TRANSFER PARAMTERS FOR NEXT NOTE OR SCORE
00032               *   INTO PLAY ROUTINE
00033 1F16 A6 00             LDAA    0,X              ;LOAD PITCH
00034 1F18 B7 1FFC           STAA    PITCH            
00035 1F1B 08                INX                      
00036 1F1C A6 00             LDAA    0,X              ;LOAD DURATION MSB
00037 1F1E 84 07             ANDA    #%00000111       ;MASK 3 LSB'S
00038 1F20 B7 1FF6           STAA    DURA             
00039 1F23 A6 00             LDAA    0,X              ;GET MSB AGAIN
00040 1F25 84 70             ANDA    #%01110000       ;MASK 3 BITS
00041 1F27 8B 76             ADDA    #TBL1            ;ENVELOPE SPEC ADDRESS
00042 1F29 B7 1F38           STAA    PLAY+2           ;LOAD ENVELOPE POINTER
00043 1F2C 08                INX                      
00044 1F2D A6 00             LDAA    0,X              ;LOAD DURATION LSB.
00045 1F2F B7 1FF7           STAA    DURA+1           
00046 1F32 08                INX                      
00047 1F33 FF 1FF8           STX     PLACE            ;SAVE SCORE POINTER
00048               *    THE PLAY ROUTING PLAYS ONE NOTE
00049 1F36 CE 1F76 PLAY      LDX     #TBL1            ;INIT EVELOPE POINTER.
00050 1F39 FF 1FFA           STX     TBL1P            ;STORE ENVELOPE POINTER.
00051 1F3C E6 00             LDAB    0,X              ;PUT AMPLITUDE VALUE IN B.
00052 1F3E FE 1FF6           LDX     DURA             ;LOAD DURATION PARAMETER
00053               *                             INTO INDEX REGISTER.
00054 1F41 BC E000 LOOP3     CPX     $E000            ;5-WASTE TIME (31 STATES)
00055 1F44 BC E000           CPX     $E000            ;5-
00056 1F47 BC E000           CPX     $E000            ;5-
00057 1F4A BC E000           CPX     $E000            ;5-
00058 1F4D BC E000           CPX     $E000            ;5-
ASM68 6800 Assembler (c) 1988-1995 Evenson Consulting Services        Page 2
FILE: c:\src\repos\zoggins\mc6800\play68b\play68b.asm      TITLE: PLAY68

00059 1F50 73 E000           COM     $E000            ;6-
00060 1F53 86 16   LOOP2     LDAA    #22              ;4-FIXED DELAY TO ADJUST
00061 1F55 4A      LOOP4     DECA                     ;2- LOWEST NOTE TO 262HZ
00062 1F56 26 FD             BNE     LOOP4            ;4- (MIDDLE c) WHEN PITCH
00063               *                               PARAMETER=FE
00064 1F58 B6 1FFC           LDAA    PITCH            ;4-LOAD PITCH PARAMETER
00065 1F5B F7 8010           STAB    MOD68            ;5-OUTPUT TO MUSIC BOARD
00066 1F5E 4A      LOOP1     DECA                     ;2-DELAY AS PER PITCH PARA
00067 1F5F 26 FD             BNE     LOOP1            ;4-
00068 1F61 53                COMB                     ;2-COMPLEMENT WAVEFORM VAL
00069 1F62 09                DEX                      ;4-DECREMENT DURATION COUN
00070 1F63 26 DC             BNE     LOOP3            ;4-
00071 1F65 7C 1FFB           INC     TBL1P+1          ;6-SET UP NEXT SEGMENT
00072 1F68 FE 1FFA           LDX     TBL1P            ;5-
00073 1F6B E6 00             LDAB    0,X              ;5-
00074 1F6D C1 01             CMPB    #$01             ;2-END OF ENVELOPE CHAR.=0
00075 1F6F 27 9C             BEQ     NEXT             ;4-GO DO NEXT NOTE.
00076 1F71 FE 1FF6           LDX     DURA             ;5-RESET DURATION PARAMETE
00077 1F74 20 DD             BRA     LOOP2            ;4-
00078               *
00079               * AMPLITUDE ENVELOPE SPECIFICATION:
00080               * MAXIMUM APLITUDE IS OUTPUT WHEN ACCUMULATOR B IS
00081               * COMPLEMENTED FROM 00 TO FF AND BACK.  MINIMUM
00082               * AMPLITUDE IS OUTPUT WHEN B IS COMPLEMENTED
00083               * BETWEEN 80 AND 7F.  AN END OF ENVELOPE RECORD
00084               * OF $01 MARKS THE END OF THE SPECIFICATION.
00085               *
00086         1F76 TBL1      EQU     *                ENVELOPE SPECIFICATIONS
00087               * TABLE 1 - ATTACK, #5
00088 1F76    FFFF           FCB     $FF,$FF,$F8,$F0,$E8,$E0,$D8,$D0 
00089 1F7E    C8C0           FCB     $C8,$C0,$B8,$B9,$A0,$90,$85,$01 
00090               * TABLE 2 - REST, #R
00091 1F86    8080           FCB     $80,$80,$80,$80,$80,$80,$80,$80 
00092 1F8E    8080           FCB     $80,$80,$80,$80,$80,$80,$80,$01 
00093               * TABLE 3 - STACCATO, #S
00094 1F96    E0F0           FCB     $E0,$F0,$FF,$E5,$C8,$BD,$B0,$A5 
00095 1F9E    988D           FCB     $98,$8D,$80,$80,$80,$80,$80,$01 
00096               * TABLE 4 - LEGATO, #L
00097 1FA6    E0F0           FCB     $E0,$F0,$FF,$FF,$FF,$FF,$FF,$FF 
00098 1FAE    FFFF           FCB     $FF,$FF,$FF,$E8,$D0,$CD,$C8,$01 
00099               * TABLE 5 - SOFT STACCATO, #1
00100 1FB6    D8BD           FCB     $D8,$BD,$C0,$B8,$B0,$A0,$90,$88 
00101 1FBE    8080           FCB     $80,$80,$80,$80,$80,$80,$80,$01 
00102               * TABLE 6 - SOFT LEGATO, #2
00103 1FC6    B8BD           FCB     $B8,$BD,$C0,$C0,$C0,$C0,$C0,$C0, 
00104 1FCE    C0C0           FCB     $C0,$C0,$C0,$B8,$B0,$A8,$A0,$01 
00105               * TABLE 7 - "SHAPED", #3
00106 1FD6    D0D6           FCB     $D0,$D6,$DD,$E3,$E8,$F5,$FF,$FF, 
00107 1FDE    FFFF           FCB     $FF,$FF,$FF,$F3,$E5,$DA,$D0,$01 
00108               * TABLE 8 - CRESCENDO, #4
00109 1FE6    B8BE           FCB     $B8,$BE,$C4,$CA,$D0,$D6,$DC,$E2, 
00110 1FEE    E8F4           FCB     $E8,$F4,$FF,$FF,$FF,$CD,$A0,$01 
00111               *
00112 1FF6         DURA      RMB     2                ;DURATION CONSTANT
00113         8010 MOD68     EQU     $8010            ;MUSIC BOARD IN I/0 SLOT 4
00114 1FF8         PLACE     RMB     2                
00115 1FFA         TBL1P     RMB     2                ;TABLE POINTER.
00116 1FFC         PITCH     RMB     1                ;PITCH PARAMETER.
ASM68 6800 Assembler (c) 1988-1995 Evenson Consulting Services        Page 3
FILE: c:\src\repos\zoggins\mc6800\play68b\play68b.asm      TITLE: PLAY68

00117               
00118         1EE2           ORG     BASEND           
00119               * KEYTONE ROUTINE
00120               * THE FOLLOWING ROUTINE PROVIDES A SHORT TONE
00121               * OR "BEEP" EACH TIME A KEY IS STRUCK ON THE
00122               * KEYBOARD AT PORT 1.  THIS IS THE PORT THAT
00123               * BASIC NORMALLY USES AS ITS CONTROL PORT.
00124 1EE2    2028 BEEP      FCB     $20,$28,$08,$00  ;"BEEP" SCORE
00125         E1AC INEEE     EQU     $E1AC            ;MIKBUG/SWTBUG INPUT
00126         0085 PRMFLG    EQU     $85              ;BASIC PROMPT FLAG
00127 1EE6 BD E1AC KEYTON    JSR     INEEE            ;GET INPUT CHARACTER
00128 1EE9 36                PSHA                     ;SAVE CHARACTER
00129 1EEA 96 85             LDAA    PRMFLG           ;PROMPT REQUIRED?
00130 1EEC 26 09             BNE     ENDTON           ;GO IF NOT
00131 1EEE CE 1EE2           LDX     #BEEP            ;POINT TO SCORE
00132 1EF1 FF 1FF8           STX     PLACE            
00133 1EF4 BD 1F0D           JSR     NEXT             ;PLAY BEEP TONE
00134 1EF7 32      ENDTON    PULA                     ;RESTORE CHARACTER
00135 1EF8 39                RTS                      
00136               
00137               * FORCE PORT 1 INPUT TO GO TO KEYTON ROUTINE
00138         0112           ORG     $112             ;PORT 1 INPUT JUMP
00139 0112 7E 1EE6           JMP     KEYTON           ;INPUT VECTOR
00140               
00141               * FORCE BASIC TO LEAVE PLAY68 MEMORY UNUSED
00142         014E           ORG     $14E             ;BASIC WORK SPACE POINTER
00143 014E    22E2           FDB     BASEND+$400      ;RESERVE 2K
00144               
00145               * PLUG MIKBIG/SWTBUG PROGRAM COUNTER TO CAUSE
00146               * ENTRY INTO SWTPC 8K BASIC 2.2.
00147         A048           ORG     $A048            ;PROGRAM COUNTER
00148 A048    0100           FDB     $100             ;BASIC "COLD ENTRY POINT
00149         0000           END                      

No errors

 Total bytes output = 281
